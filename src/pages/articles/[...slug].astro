---
import { format, formatISO } from 'date-fns';
import Layout from '@layouts/Layout.astro';
import Tag from '@components/Tag.astro';
import type { GetStaticPaths } from 'astro';
import { getCollection, type CollectionEntry } from 'astro:content';
import GlobalNavigation from '@components/GlobalNavigation/GlobalNavigation.astro';
import Footer from '@components/Footer.astro';
import SubscriptionForm from '@components/SubscriptionForm.astro';
import Prose from '@components/Prose.astro';
import { getEntries } from 'astro:content';
import { create_toc } from '@lib/create_toc';
import Toc from '@components/toc/Toc.astro';

export const prerender = true;

interface Props {
  article: CollectionEntry<'articles'>;
}

export const getStaticPaths: GetStaticPaths = async () => {
  const articles = await getCollection('articles');

  return articles.map((article) => ({
    props: { article },
    params: { slug: article.slug }
  }));
};

const { article } = Astro.props;
if (!article) {
  return Astro.redirect('/404');
}

const { Content, headings } = await article.render();
const tags = await getEntries(article.data.tags);
const toc = create_toc(headings);
---

<Layout title={article.data.heading} description={article.data.description}>
  <header
    slot="header"
    class="m-auto flex max-w-screen-md flex-row justify-between py-12"
  >
    <a href="/" class="text-2xl font-bold text-stone-400 hover:text-stone-800"
      >{'<-'} Home</a
    >
    <GlobalNavigation orientation="horizontal" />
  </header>
  <main class="mx-auto w-full max-w-screen-md">
    <article class="w-full">
      <Prose>
        <header class="flex w-full flex-col flex-nowrap items-center font-sans">
          <div class="m-auto mb-6">
            <time
              datetime={formatISO(article.data.published_at)}
              class="text-xl text-stone-400"
            >
              {format(article.data.published_at, 'PPP')}
            </time>
          </div>
          <h1>{article.data.heading}</h1>
        </header>
        <Toc nodes={toc} depth={3} />
        <Content />
      </Prose>

      <footer class="my-4 flex flex-row gap-2">
        {
          tags.map((t) => (
            <Tag tag={{ id: t.id, name: t.data.name }} fill={true} />
          ))
        }
      </footer>
    </article>
  </main>

  <Footer slot="footer" class="w-full max-w-screen-md pt-12">
    <div
      class="mx-auto max-w-screen-sm rounded-lg bg-stone-100 p-6"
      slot="footer-top"
    >
      <SubscriptionForm />
    </div>
  </Footer>
</Layout>
